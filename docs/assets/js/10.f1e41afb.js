(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{335:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"hive最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hive最佳实践"}},[s._v("#")]),s._v(" Hive最佳实践")]),s._v(" "),t("h4",{attrs:{id:"数据分层-京东"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据分层-京东"}},[s._v("#")]),s._v(" 数据分层(京东)")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/%E6%95%B0%E4%BB%93-%E6%95%B0%E6%8D%AE%E5%88%86%E5%B1%82.png",alt:"数仓-数据分层"}})]),s._v(" "),t("p",[s._v("BDM—数据缓存层，同ODS，主要是为了命名统一，存放大表的增量数据，按照自然时间分区，")]),s._v(" "),t("p",[s._v("FDM—数据基础层，存放全量数据，大表按照创建时间分区，小表非分区")]),s._v(" "),t("p",[s._v("GDM—数据汇总层，数据的预关联、预汇总及预加工；依赖对应用的共性提炼")]),s._v(" "),t("p",[s._v("ADM—数据应用层，主要是为了命名统一，面向应用，按需定制，即最终结果表存放的数据库")]),s._v(" "),t("p",[s._v("DIM—固定数据层，比如国家代码和国家名、地理位置、中文名、国旗图片等")]),s._v(" "),t("p",[s._v("TMP—存放临时数据表")]),s._v(" "),t("p",[s._v("做好数据分层，构建数据集市，能合理使用计算资源，避免重复计算")]),s._v(" "),t("h4",{attrs:{id:"数据分区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据分区"}},[s._v("#")]),s._v(" 数据分区")]),s._v(" "),t("p",[s._v("除常量数据库表外，所有数据表都应该分区，在作业流中，周期性的获取或生成数据，一般按时间分区，每个分区内存放全量或增量数据")]),s._v(" "),t("p",[s._v("按全量存放，每个分区都保存全量数据的快照，数据即取即用，但后面每个分区的数据递增；按增量存放，使用数据需要加一层处理，但分区的数据均匀且数据量小，推荐增量存放")]),s._v(" "),t("h4",{attrs:{id:"数据格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据格式"}},[s._v("#")]),s._v(" 数据格式")]),s._v(" "),t("h5",{attrs:{id:"储存格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#储存格式"}},[s._v("#")]),s._v(" 储存格式")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("存储格式")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("存储方式")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("特点")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("TextFile")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("行存储")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("存储空间消耗比较大，并且压缩的text 无法分割和合并 查询的效率最低,可以直接存储，加载数据的速度最高")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("SequenceFile")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("行存储")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("存储空间消耗最大,压缩的文件可以分割和合并 查询效率高，需要通过text文件转化来加载")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("RCFile")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("数据按行分块 每块按照列存储")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("存储空间最小，查询的效率最高 ，需要通过text文件转化来加载，加载的速度最低。压缩快 快速列存取。读记录尽量涉及到的block最少 读取需要的列只需要读取每个row group 的头部定义。 读取全量数据的操作 性能可能比sequencefile没有明显的优势")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("ORCFile")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("数据按行分块 每块按照列存储")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("压缩快,快速列存取 ,效率比rcfile高,是rcfile的改良版本")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("Parquet")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("列存储")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("相对于PRC，Parquet压缩比较低，查询效率较低，不支持update、insert和ACID.但是Parquet支持Impala查询引擎")])])])]),s._v(" "),t("p",[s._v("https://blog.csdn.net/u010003835/article/details/81098325")]),s._v(" "),t("p",[s._v("压缩和解压缩会增加额外的CPU开销，Hadoop的job通常是I/O密集型而不是CPU密集型的，通过减少载入内存的数据量而提高I/O吞吐量会更加提高网络传输性能。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("压缩格式")]),s._v(" "),t("th",[s._v("是否可拆分")]),s._v(" "),t("th",[s._v("是否自带")]),s._v(" "),t("th",[s._v("压缩率")]),s._v(" "),t("th",[s._v("速度")]),s._v(" "),t("th",[s._v("是否hadoop自带")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("gzip")]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("很高")]),s._v(" "),t("td",[s._v("比较快")]),s._v(" "),t("td",[s._v("是")])]),s._v(" "),t("tr",[t("td",[s._v("lzo")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("比较高")]),s._v(" "),t("td",[s._v("很快")]),s._v(" "),t("td",[s._v("否，要安装")])]),s._v(" "),t("tr",[t("td",[s._v("snappy")]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("比较高")]),s._v(" "),t("td",[s._v("很快")]),s._v(" "),t("td",[s._v("否，要安装")])]),s._v(" "),t("tr",[t("td",[s._v("bzip2")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("最高")]),s._v(" "),t("td",[s._v("慢")]),s._v(" "),t("td",[s._v("是")])])])]),s._v(" "),t("h5",{attrs:{id:"字段格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字段格式"}},[s._v("#")]),s._v(" 字段格式")]),s._v(" "),t("p",[s._v("而是要考虑一定的数据清洗，比如异常字段的处理、字段命名规范化、时间字段的统一等，一般这些很容易会被忽略，但是却至关重要")]),s._v(" "),t("h4",{attrs:{id:"hivesql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hivesql"}},[s._v("#")]),s._v(" HiveSQL")]),s._v(" "),t("h5",{attrs:{id:"列裁剪和分区裁剪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列裁剪和分区裁剪"}},[s._v("#")]),s._v(" 列裁剪和分区裁剪")]),s._v(" "),t("p",[s._v("最基本的操作。所谓列裁剪就是在查询时只读取需要的列，分区裁剪就是只读取需要的分区")]),s._v(" "),t("h5",{attrs:{id:"避免全表扫描"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#避免全表扫描"}},[s._v("#")]),s._v(" 避免全表扫描")]),s._v(" "),t("p",[s._v("对分区列动态的计算比较会引起全表扫描")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("usernum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" usernum\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_test\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" cp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020040500")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" cp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v("\n               from_unixtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unix_timestamp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2020040500'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yyyyMMddHH'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("\n                             "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                             "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yyyyMMddHH'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" usernum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 或者")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("usernum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" usernum\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_test\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" cp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" cp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" xxx\n         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" usernum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("尽量固定分区列范围")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("usernum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" usernum\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_test\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" cp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020040500")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" cp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020033000")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" usernum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h5",{attrs:{id:"谓词下推"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谓词下推"}},[s._v("#")]),s._v(" 谓词下推")]),s._v(" "),t("p",[s._v("将SQL语句中的where谓词逻辑都尽可能提前执行，减少下游处理的数据量。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("uid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("event_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("topic_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("title\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" calendar_record_log a\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" uid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("topic_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("title "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" forum_topic\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" pt_date "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20190224")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("content"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("uid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("uid\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pt_date "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20190224")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("对forum_topic做过滤的where语句写在子查询内部，而不是外部。Hive中有谓词下推优化的配置项"),t("code",[s._v("hive.optimize.ppd")]),s._v("，默认值true，与它对应的逻辑优化器是PredicatePushDown。该优化器就是将OperatorTree中的FilterOperator向上提")]),s._v(" "),t("p",[s._v("讲解HiveSQL解析与执行过程:")]),s._v(" "),t("p",[s._v("https://tech.meituan.com/2014/02/12/hive-sql-to-mapreduce.html")]),s._v(" "),t("h5",{attrs:{id:"sort-by代替order-by"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sort-by代替order-by"}},[s._v("#")]),s._v(" sort by代替order by")]),s._v(" "),t("p",[s._v("HiveSQL中的order by与其他SQL方言中的功能一样，就是将结果按某字段全局排序，这会导致所有map端数据都进入一个reducer中，在数据量大时可能会长时间计算不完。")]),s._v(" "),t("p",[s._v("如果使用sort by，那么还是会视情况启动多个reducer进行排序，并且保证每个reducer内局部有序。为了控制map端数据分配到reducer的key，往往还要配合distribute by一同使用。如果不加distribute by的话，map端数据就会随机分配到reducer。 举个例子，假如要以UID为key，以上传时间倒序、记录类型倒序输出记录数据：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" uid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("upload_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("event_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("record_data\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" calendar_record_log\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" pt_date "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20190201")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" pt_date "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20190224")]),s._v("\ndistribute "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" uid\nsort "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" upload_time "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("event_type "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h5",{attrs:{id:"group-by代替distinct"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#group-by代替distinct"}},[s._v("#")]),s._v(" group by代替distinct")]),s._v(" "),t("p",[s._v("当要统计某一列的去重数时，如果数据量很大，count(distinct)就会非常慢，原因与order by类似，count(distinct)逻辑只会有很少的reducer来处理。这时可以用group by来改写：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" uid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" calendar_record_log\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" pt_date "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20190101")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" uid\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("但是这样写会启动两个MR job（单纯distinct只会启动一个），所以要确保数据量大到启动job的overhead远小于计算耗时，才考虑这种方法。当数据集很小或者key的倾斜比较明显时，group by还可能会比distinct慢。 那么如何用group by方式同时统计多个列？下面是解决方法：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" some_table\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("all")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" some_table "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("all")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" some_table "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h5",{attrs:{id:"join将大表放后头-最新版本的hive会优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#join将大表放后头-最新版本的hive会优化"}},[s._v("#")]),s._v(" Join将大表放后头(最新版本的hive会优化)")]),s._v(" "),t("p",[s._v("Hive假定查询中最后的一个表是大表。它会将其它表缓存起来，然后扫描最后那个表。因此通常需要将小表放前面，或者标记哪张表是大表：/*streamtable(table_name) */")]),s._v(" "),t("h5",{attrs:{id:"使用相同的连接键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用相同的连接键"}},[s._v("#")]),s._v(" 使用相同的连接键")]),s._v(" "),t("p",[s._v("当对3个或者更多个表进行join连接时，如果每个on子句都使用相同的连接键的话，那么只会产生一个MapReduce job。")]),s._v(" "),t("h5",{attrs:{id:"尽量原子化操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#尽量原子化操作"}},[s._v("#")]),s._v(" 尽量原子化操作")]),s._v(" "),t("p",[s._v("尽量避免一个SQL包含复杂逻辑，可以使用中间表来完成复杂的逻辑")]),s._v(" "),t("h4",{attrs:{id:"参数调优"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数调优"}},[s._v("#")]),s._v(" 参数调优")]),s._v(" "),t("h5",{attrs:{id:"mapreduce优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mapreduce优化"}},[s._v("#")]),s._v(" MapReduce优化")]),s._v(" "),t("h5",{attrs:{id:"调整mapper数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调整mapper数"}},[s._v("#")]),s._v(" "),t("strong",[s._v("调整mapper数")])]),s._v(" "),t("p",[s._v("mapper数量与输入文件的split数息息相关，在Hadoop源码"),t("code",[s._v("org.apache.hadoop.mapreduce.lib.input.FileInputFormat")]),s._v("类中可以看到split划分的具体逻辑。这里不贴代码，直接叙述mapper数是如何确定的。")]),s._v(" "),t("ul",[t("li",[s._v("可以直接通过参数"),t("code",[s._v("mapred.map.tasks")]),s._v("（默认值2）来设定mapper数的期望值，但它不一定会生效，下面会提到。")]),s._v(" "),t("li",[s._v("设输入文件的总大小为"),t("code",[s._v("total_input_size")]),s._v("。HDFS中，一个块的大小由参数"),t("code",[s._v("dfs.block.size")]),s._v("指定，默认值64MB或128MB。在默认情况下，mapper数就是： "),t("code",[s._v("default_mapper_num = total_input_size / dfs.block.size")]),s._v("。")]),s._v(" "),t("li",[s._v("参数"),t("code",[s._v("mapred.min.split.size")]),s._v("（默认值1B）和"),t("code",[s._v("mapred.max.split.size")]),s._v("（默认值64MB）分别用来指定split的最小和最大大小。split大小和split数计算规则是： "),t("code",[s._v("split_size = MAX(mapred.min.split.size, MIN(mapred.max.split.size, dfs.block.size))")]),s._v("； "),t("code",[s._v("split_num = total_input_size / split_size")]),s._v("。")]),s._v(" "),t("li",[s._v("得出mapper数： "),t("code",[s._v("mapper_num = MIN(split_num, MAX(default_num, mapred.map.tasks))")]),s._v("。")])]),s._v(" "),t("p",[s._v("可见，如果想减少mapper数，就适当调高"),t("code",[s._v("mapred.min.split.size")]),s._v("，split数就减少了。如果想增大mapper数，除了降低"),t("code",[s._v("mapred.min.split.size")]),s._v("之外，也可以调高"),t("code",[s._v("mapred.map.tasks")]),s._v("。")]),s._v(" "),t("p",[s._v("一般来讲，如果输入文件是少量大文件，就减少mapper数；如果输入文件是大量非小文件，就增大mapper数；至于大量小文件的情况，得参考下面“合并小文件”一节的方法处理。")]),s._v(" "),t("h5",{attrs:{id:"调整reducer数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调整reducer数"}},[s._v("#")]),s._v(" "),t("strong",[s._v("调整reducer数")])]),s._v(" "),t("p",[s._v("reducer数量的确定方法比mapper简单得多。使用参数"),t("code",[s._v("mapred.reduce.tasks")]),s._v("可以直接设定reducer数量，不像mapper一样是期望值。但如果不设这个参数的话，Hive就会自行推测，逻辑如下：")]),s._v(" "),t("ul",[t("li",[s._v("参数"),t("code",[s._v("hive.exec.reducers.bytes.per.reducer")]),s._v("用来设定每个reducer能够处理的最大数据量，默认值1G（1.2版本之前）或256M（1.2版本之后）。")]),s._v(" "),t("li",[s._v("参数"),t("code",[s._v("hive.exec.reducers.max")]),s._v("用来设定每个job的最大reducer数量，默认值999（1.2版本之前）或1009（1.2版本之后）。")]),s._v(" "),t("li",[s._v("得出reducer数： "),t("code",[s._v("reducer_num = MIN(total_input_size / reducers.bytes.per.reducer, reducers.max)")]),s._v("。")])]),s._v(" "),t("p",[s._v("reducer数量与输出文件的数量相关。如果reducer数太多，会产生大量小文件，对HDFS造成压力。如果reducer数太少，每个reducer要处理很多数据，容易拖慢运行时间或者造成OOM。")]),s._v(" "),t("h5",{attrs:{id:"合并小文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并小文件"}},[s._v("#")]),s._v(" "),t("strong",[s._v("合并小文件")])]),s._v(" "),t("ul",[t("li",[s._v("输入阶段合并 需要更改Hive的输入文件格式，即参数"),t("code",[s._v("hive.input.format")]),s._v("，默认值是"),t("code",[s._v("org.apache.hadoop.hive.ql.io.HiveInputFormat")]),s._v("，我们改成"),t("code",[s._v("org.apache.hadoop.hive.ql.io.CombineHiveInputFormat")]),s._v("。 这样比起上面调整mapper数时，又会多出两个参数，分别是"),t("code",[s._v("mapred.min.split.size.per.node")]),s._v("和"),t("code",[s._v("mapred.min.split.size.per.rack")]),s._v("，含义是单节点和单机架上的最小split大小。如果发现有split大小小于这两个值（默认都是100MB），则会进行合并。具体逻辑可以参看Hive源码中的对应类。")]),s._v(" "),t("li",[s._v("输出阶段合并 直接将"),t("code",[s._v("hive.merge.mapfiles")]),s._v("和"),t("code",[s._v("hive.merge.mapredfiles")]),s._v("都设为true即可，前者表示将map-only任务的输出合并，后者表示将map-reduce任务的输出合并。 另外，"),t("code",[s._v("hive.merge.size.per.task")]),s._v("可以指定每个task输出后合并文件大小的期望值，"),t("code",[s._v("hive.merge.size.smallfiles.avgsize")]),s._v("可以指定所有输出文件大小的均值阈值，默认值都是1GB。如果平均大小不足的话，就会另外启动一个任务来进行合并。")])]),s._v(" "),t("h5",{attrs:{id:"启用压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启用压缩"}},[s._v("#")]),s._v(" "),t("strong",[s._v("启用压缩")])]),s._v(" "),t("p",[s._v("压缩job的中间结果数据和输出数据，可以用少量CPU时间节省很多空间。压缩方式一般选择Snappy，效率最高。 要启用中间压缩，需要设定"),t("code",[s._v("hive.exec.compress.intermediate")]),s._v("为true，同时指定压缩方式"),t("code",[s._v("hive.intermediate.compression.codec")]),s._v("为"),t("code",[s._v("org.apache.hadoop.io.compress.SnappyCodec")]),s._v("。另外，参数"),t("code",[s._v("hive.intermediate.compression.type")]),s._v("可以选择对块（BLOCK）还是记录（RECORD）压缩，BLOCK的压缩率比较高。 输出压缩的配置基本相同，打开"),t("code",[s._v("hive.exec.compress.output")]),s._v("即可。")]),s._v(" "),t("h5",{attrs:{id:"jvm重用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm重用"}},[s._v("#")]),s._v(" "),t("strong",[s._v("JVM重用")])]),s._v(" "),t("p",[s._v("在MR job中，默认是每执行一个task就启动一个JVM。如果task非常小而碎，那么JVM启动和关闭的耗时就会很长。可以通过调节参数"),t("code",[s._v("mapred.job.reuse.jvm.num.tasks")]),s._v("来重用。例如将这个参数设成5，那么就代表同一个MR job中顺序执行的5个task可以重复使用一个JVM，减少启动和关闭的开销。但它对不同MR job中的task无效。")]),s._v(" "),t("h5",{attrs:{id:"并行执行与本地模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并行执行与本地模式"}},[s._v("#")]),s._v(" 并行执行与本地模式")]),s._v(" "),t("ul",[t("li",[s._v("并行执行 Hive中互相没有依赖关系的job间是可以并行执行的，最典型的就是多个子查询union all。在集群资源相对充足的情况下，可以开启并行执行，即将参数"),t("code",[s._v("hive.exec.parallel")]),s._v("设为true。另外"),t("code",[s._v("hive.exec.parallel.thread.number")]),s._v("可以设定并行执行的线程数，默认为8，一般都够用。")]),s._v(" "),t("li",[s._v("本地模式 Hive也可以不将任务提交到集群进行运算，而是直接在一台节点上处理。因为消除了提交到集群的overhead，所以比较适合数据量很小，且逻辑不复杂的任务。 设置"),t("code",[s._v("hive.exec.mode.local.auto")]),s._v("为true可以开启本地模式。但任务的输入数据总量必须小于"),t("code",[s._v("hive.exec.mode.local.auto.inputbytes.max")]),s._v("（默认值128MB），且mapper数必须小于"),t("code",[s._v("hive.exec.mode.local.auto.tasks.max")]),s._v("（默认值4），reducer数必须为0或1，才会真正用本地模式执行。")])]),s._v(" "),t("h5",{attrs:{id:"严格模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[s._v("#")]),s._v(" 严格模式")]),s._v(" "),t("p",[s._v("所谓严格模式，就是强制不允许用户执行3种有风险的HiveSQL语句，一旦执行会直接失败。这3种语句是：")]),s._v(" "),t("ul",[t("li",[s._v("查询分区表时不限定分区列的语句；")]),s._v(" "),t("li",[s._v("两表join产生了笛卡尔积的语句；")]),s._v(" "),t("li",[s._v("用order by来排序但没有指定limit的语句。")])]),s._v(" "),t("p",[s._v("要开启严格模式，需要将参数"),t("code",[s._v("hive.mapred.mode")]),s._v("设为strict。")]),s._v(" "),t("h4",{attrs:{id:"探索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#探索"}},[s._v("#")]),s._v(" 探索")]),s._v(" "),t("h5",{attrs:{id:"full-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#full-join"}},[s._v("#")]),s._v(" FULL JOIN")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\nuser_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\na string\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\nuser_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nb string\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\nuser_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nc string\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a的null'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b的null'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c的null'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" user_group "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" user_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" user_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" user_id \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" user_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" user_id \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" user_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" user_group "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" u \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" a \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" b \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" c \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 多表FULL JOIN一定要注意，会出现没有join上的情况")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- SELECT a.user_id, b.user_id, c.user_id, a.a, b.b, c.c FROM ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- (SELECT * FROM test.a where user_id is NOT NULL) as a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- FULL JOIN (SELECT * FROM test.b where user_id is NOT NULL) as b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- ON a.user_id = b.user_id")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- FULL JOIN (SELECT * FROM test.c where user_id is NOT NULL) as c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- ON a.user_id = c.user_id and b.user_id = c.user_id")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);